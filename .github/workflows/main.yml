name: CI/CD pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test_build:
    name: Testing if the build was successful
    runs-on: ubuntu-latest
    environment: frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
        
      - name: Install dependencies
        run: npm install
        working-directory: frontend/web

      - name: Create frontend .env file
        run: echo "PORT=${{ secrets.PORT }}" >> .env
        working-directory: frontend/web

      - name: Build the frontend
        run: npm run build
        working-directory: frontend/web

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build_artifact
          path: frontend/web/build/
          
  backend_deploy:
    name: Deploy the backend
    runs-on: ubuntu-latest
    environment: backend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Create backend .env file
        run: echo "PORT=${{ secrets.PORT }}" >> .env

      - name: Start backend
        run: npm run dev
      
  frontend_deploy:
    name: Deploy the frontend
    needs: test_build
    runs-on: ubuntu-latest
    environment: frontend

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build_artifact
          path: frontend/web/build/

      - name: Create frontend .env file
        run: echo "PORT=${{ secrets.PORT }}" >> .env
        working-directory: frontend/web

      - name: Deploy the build
        run: node --name "frontend" -- -r dotenv/config build
        working-directory: frontend/web
